4 punto:
SELECT RH, COUNT(*) FROM AFILIADOS INNER JOIN TIPO_SANGRE ON TIP_SAN_RH = RH
GROUP BY RH
ORDER BY COUNT(*) DESC

2 punto:
-SELECT DISTINCT PRIMER_NOMBRE, TIP_SAN_RH FROM AFILIADOS;
-SELECT DISTINCT ciudad FROM clientes;
-SELECT DISTINCT estado, ciudad FROM afiliados WHERE estado IS NOT NULL ORDER BY 
 estado;
 
 --La consulta siguiente devuelve valores distintos de la consulta de la t1tabla que no se encuentran en el resultado de la consulta de la t2tabla.
 SELECT id FROM t1 
 MINUS
 SELECT id FROM t2;
 --MySQL no es compatible MINUScon el operador. Sin embargo, puede usar JOIN para emularlo.
 SELECT id
 FROM t1
 LEFT JOIN
 t2 USING (id)
 --SSELECT column_list FROM table1  
LEFT JOIN table2 ON condition  
WHERE table2.column_name IS NULL; 

El operador EXISTS en MySQL es un tipo de operador booleano que devuelve el resultado verdadero o falso 
-SELECT name, occupation FROM customer  
WHERE EXISTS (SELECT * FROM Orders   
WHERE customer.cust_id = Orders.cust_id);  
-DELETE FROM Orders WHERE EXISTS (  
SELECT * FROM customer   
WHERE order_id=3);  
--La siguiente instrucci√≥n SQL devuelve VERDADERO y enumera los proveedores con un precio de producto inferior a 20:
SELECT nombreProvedor
FROM provedor
WHERE EXISTS (SELECT Nombre_Producto FROM Productos WHERE Productos.clientesID = provedor.provedorID AND precio < 20);



SELECT * FROM AFILIADOS WHERE DOCUMENTO IN (
SELECT DOCUMENTO FROM AFILIADOS WHERE APELLIDO = MORENO
GROUP BY DOCUMENTO)
HAVING COUNT(*) > 2

SELECT * FROM AFILIADOS WHERE DOCUMENTO IN (
SELECT DOCUMENTO FROM AFILIADO
GROUP BY DOCUMENTO)
HAVING COUNT(*) > 1

SELECT * FROM AFILIADOS WHERE APELLIDO IN (
SELECT APELLIDO FROM AFILIADOS
GROUP BY APELLIDO)
HAVING COUNT(*) > 10

SELECT DISTINCT PRIMER_NOMBRE, TIP_SAN_RH FROM AFILIADOS

SUBSTR - SUBSTRING

SELECT SUBSTR(APELLIDO, 4, 4) APELLIDO_CORTO, NOMBRE NAME,   FROM AFILIADOS

MAYORQUIN
SUBSTR(MEDICAMENTO, 1, 3)
SUBSTR(MEDICAMENTO, 3, 3)
SUBSTR(MEDICAMENTO, 33, 8) FECHA

00000000000000000000000000000002022102500000000000000000000
00000000000000000000000000000002022102500000000000000000000
00000000000000000000000000000002022102500000000000000000000
00000000000000000000000000000002022102500000000000000000000
00000000000000000000000000000002022102500000000000000000000
00000000000000000000000000000002022102500000000000000000000

SELECT * FROM AFILIADOS
INNER JOIN
TIPO_SANGRE ON TIP_SAN_RH = RH

TABLA AFILIADOS CAMPO TIP_SAN_RH = (O-, O+, A) A
TABLA TIPO_SANGRE CAMPO RH = (O-, O+, AB, A) B

          A      INNER JOIN       B
          A      LEFT JOIN        B
          A      RIGHT JOIN       B

CREATE TABLE TIPO_AFILIACIONES
(CODIGO INT PRIMARY KEY,
NOMBRE VARCHAR(100),
DESCRIPCION VARCHAR(1000)
);

SELECT TIP_SAN_RH, CODIGO, NOMBRE FROM TIPO_AFILIACIONES A, TIPO_SANGRE B
WHERE  A.NOMBRE = B.NOMBRE
CODIGO <> 2 AND TIP_SAN_RH = 'O+'

SELECT RH, COUNT(*) FROM AFILIADOS INNER JOIN TIPO_SANGRE ON TIP_SAN_RH = RH
GROUP BY RH
ORDER BY COUNT(*) DESC
limit  1;
